#! /bin/bash -l
#SBATCH --export=NONE
#SBATCH -M HOST
#SBATCH -p STANDARDQ
#SBATCH --account=ACCOUNT
#SBATCH --time=12:00:00
#SBATCH --nodes=1

function test_fail {
if [[ $1 != 0 ]]
then
    cd ${base}
    python bin/track_task.py fail --jobid=${SLURM_JOBID} --finish_time=`date +%s`
    exit $1
fi
}

# Set version number
version=3.0 # First GLEAM-X pipeline data reduction April 2018
absmem=ABSMEM
obsnum=OBSNUM
base=BASEDIR
# WSClean suffixes for subchannels and MFS
subchans="MFS 0000 0001 0002 0003"

# Update database
cd ${base}
track_task.py start --jobid=${SLURM_JOBID} --start_time=`date +%s`

datadir=${base}/${obsnum}
cd ${datadir}

metafits=`ls -t ${obsnum}*metafits* | head -1`

# Set up telescope-configuration-dependent options
if [[ $obsnum -lt 1151402936 ]] ; then
    telescope="MWA128T"
    basescale=1.1
    imsize=4000
    robust=-1.0
elif [[ $obsnum -ge 1151402936 ]] && [[ $obsnum -lt 1191580576 ]] ; then
    telescope="MWAHEX"
    basescale=2.0
    imsize=2000
    robust=-2.0
elif [[ $obsnum -ge 1191580576 ]] ; then
    telescope="MWALB"
    basescale=0.6
    imsize=8000
    robust=0.0
fi

# Set up channel-dependent options
chan=`pyhead.py -p CENTCHAN ${metafits} | awk '{print $3}'`
bandwidth=`pyhead.py -p BANDWDTH ${metafits} | awk '{print $3}'`
centfreq=`pyhead.py -p FREQCENT ${metafits} | awk '{print $3}'`
    # Pixel scale
scale=`echo "$basescale / $chan" | bc -l` # At least 4 pix per synth beam for each channel
    # Naming convention for output files
lowfreq=`echo "$centfreq $bandwidth" | awk '{printf("%00d\n",$1-($2/2.)+0.5)}'`
highfreq=`echo "$centfreq $bandwidth" | awk '{printf("%00d\n",$1+($2/2.)+0.5)}'`
freqrange="${lowfreq}-${highfreq}"

# Set up position-dependent options
RA=`pyhead.py -p RA $metafits | awk '{print $3}'`
Dec=`pyhead.py -p Dec $metafits | awk '{print $3}'`
    # Multiscale clean original GLEAM Galactic plane, normal clean for everything else
b=`fk5_to_gal.py $RA $Dec | awk '{printf("%d",$2)}' | sed "s/-//"`
if [[ $b -le 15 ]] && [[ $telescope == "MWA128T" ]]
then
    multiscale="-multiscale -mgain 0.6"
else
    multiscale="-mgain 0.85"
fi
    # Set up the primary beam to match our observation WCS -- may be needed for peeling
dec=`echo $Dec | awk '{printf("%.0f",$1)}'`
HA=`pyhead.py -p HA $metafits | awk '{print $3}'`
ha=`echo $HA | awk 'BEGIN{FS=":"} {printf("%.0f",$1+($2/60.)+($3/3600.))}'`

#cp ../pbeams/Dec${dec}_${chan}/beam-0000-xxi.fits ./testwcs.fits
#pyhead.py -u CRVAL1 $RA ./testwcs.fits
# For use with this later, if needed:
#bool=`check_src_fov.py -f testwcs.fits -s $source`

wsclean $multiscale -nmiter 5 -niter 1000000 \
    -auto-threshold $tsigma \
    -name ${obsnum} \
    -size ${dirtysize} ${dirtysize} \
    -trim ${imsize} ${imsize} \
    -scale ${scale:0:8} \
    -pol XX,YY,XY,YX \
    -weight briggs ${robust} \
    -abs-mem ${absmem} \
    -join-polarizations \
    -join-channels \
    -channels-out 4 \
    -data-column CORRECTED_DATA \
    ${obsnum}.ms | tee wsclean.log

#    $uvrange \
  test_fail $?

# create stokes iquv images
for subchan in $subchans
do
    pbcorrect ${obsnum}-${subchan} image.fits ../pbeams/Dec${dec}_${chan}/HA${ha}/beam-$subchan ${obsnum}-${subchan}
    test_fail $?
done

# Rename files
for pol in $pols
do
    deep="${obsnum}-${subchan}-${pol}-image.fits"
    newfilename=`wsclean2gleam.py -f $deep -v $version`
    mv $deep $newfilename
done

cd ${base}
track_task.py finish --jobid=${SLURM_JOBID} --finish_time=`date +%s`
